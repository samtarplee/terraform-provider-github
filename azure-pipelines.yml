# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: eit-uks-prd-win-ado-agent-pool

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'git config --system core.longpaths true'


- task: UseDotNet@2 
  inputs:
    packageType: 'sdk' # 'runtime' | 'sdk'. Required. Package to install. Default: sdk.
    version: '7.x' # string. Required. Version. Default: 2.2.x.
    #includePreviewVersions: false # boolean. Include Preview Versions. Default: false.
  # Advanced
    #installationPath: '$(Agent.ToolsDirectory)/dotnet' # string. Path To Install .Net Core. Default: $(Agent.ToolsDirectory)/dotnet.
    #performMultiLevelLookup: false # boolean. Perform Multi Level Lookup. Default: false.

- task: UseDotNet@2 
  inputs:
    packageType: 'sdk' # 'runtime' | 'sdk'. Required. Package to install. Default: sdk.
    version: '8.x' # string. Required. Version. Default: 2.2.x.
    #includePreviewVersions: false # boolean. Include Preview Versions. Default: false.
  # Advanced
    #installationPath: '$(Agent.ToolsDirectory)/dotnet' # string. Path To Install .Net Core. Default: $(Agent.ToolsDirectory)/dotnet.
    #performMultiLevelLookup: false # boolean. Perform Multi Level Lookup. Default: false.

- script: |
    # Download NuGet.exe
    Invoke-WebRequest -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile $(System.DefaultWorkingDirectory)\nuget.exe
    
    # Add NuGet to the PATH
    $nugetPath = "$(System.DefaultWorkingDirectory)"
    [Environment]::SetEnvironmentVariable("PATH", $nugetPath + ";" + [Environment]::GetEnvironmentVariable("PATH", "Machine"), "Machine")
    
    # Optionally, verify the installation
    nuget.exe help
  displayName: 'Install NuGet and Add to PATH'